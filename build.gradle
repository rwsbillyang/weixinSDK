buildscript {
    repositories {
        mavenLocal()
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        jcenter()
        google()
    }

    dependencies {
        classpath "net.sf.proguard:proguard-gradle:6.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

    }
}

allprojects {
    group 'com.github.rwsbillyang.wxSDK'
    version '0.3.0'

    apply plugin: 'idea'
    apply plugin: 'kotlinx-serialization'
    //apply plugin: 'com.github.johnrengelman.shadow'
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    // 指定编码格式
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    }
    ext {//依赖版本
        mysqlConnectorVersion = "5.1.38"
    }

    sourceSets {
        main.kotlin.srcDirs = main.java.srcDirs = ['src']
        test.kotlin.srcDirs = test.java.srcDirs = ['test']
        main.resources.srcDirs = ['resources']
        test.resources.srcDirs = ['testresources']
    }
    repositories {
        mavenLocal()
        mavenLocal()
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        jcenter()
        maven { url 'https://kotlin.bintray.com/ktor' }
        maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation "ch.qos.logback:logback-classic:$logback_version"
        implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
        implementation("io.ktor:ktor-client-logging-jvm:$ktor_version")

        //implementation "io.ktor:ktor-client-okhttp:$ktor_version"
        //implementation "io.ktor:ktor-client-apache:$ktor_version"
        implementation "io.ktor:ktor-client-cio-jvm:$ktor_version"

        //implementation "io.ktor:ktor-client-http-timeout:$ktor_version"
        implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
        implementation "io.ktor:ktor-client-serialization-jvm:$ktor_version"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version" // JVM dependency
        implementation("io.ktor:ktor-serialization:$ktor_version")

        testCompile "io.ktor:ktor-server-tests:$ktor_version"
        testImplementation('junit:junit:4.12')
        testCompile "io.ktor:ktor-server-tests:$ktor_version"
        testCompile "com.github.ben-manes.caffeine:caffeine:2.7.0+"
        compileOnly "com.github.ben-manes.caffeine:caffeine:2.7.0+"


        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'

        //commons-codec 1.13 会报 base64异常，1.10，1.15没有问题
        // https://mvnrepository.com/artifact/commons-codec/commons-codec
        implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'

        implementation group: 'org.mongodb', name: 'bson', version: '4.1.0'
    }

//    configurations {
//        //移除spring boot 默认logger依赖
//        all*.exclude module: 'spring-boot-starter-logging'
//    }

    publishing {
        publications {
            maven(MavenPublication) {
                //artifact "./build/libs/${rootProject.name}-${version}.jar"
                //groupId group
                //artifactId "${rootProject.name}"
                //version version
                from components.java
            }
        }
    }
}











