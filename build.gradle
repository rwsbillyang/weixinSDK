buildscript {
    repositories {
        mavenLocal()
        //maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        maven { url 'https://jitpack.io' }
        jcenter()
        google()
    }

    dependencies {
        classpath "net.sf.proguard:proguard-gradle:$proguardVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"

    }
}

allprojects {
    group 'com.github.rwsbillyang.wxSDK'
    version "$wxSdkVersion"
    apply plugin: 'idea'
    //apply plugin: 'com.github.johnrengelman.shadow'
}

subprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-serialization'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
//    apply plugin: 'com.google.devtools.ksp'

//    plugins {
//        id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
//        id 'org.jetbrains.kotlin.plugin.serialization' version "$kotlin_version"
//        id "com.google.devtools.ksp" version "$ksp_version"
//    }

    sourceCompatibility = "$jdkVersion"
    targetCompatibility = "$jdkVersion"

    compileKotlin {
        kotlinOptions.jvmTarget = "$jdkVersion"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "$jdkVersion"
    }

    // 指定编码格式
    [compileJava,compileTestJava,javadoc]*.options*.encoding = 'UTF-8'
    repositories {
        mavenLocal()
        //maven{ url 'https://maven.aliyun.com/nexus/content/groups/public/'}
        mavenCentral()
        maven { url 'https://jitpack.io' }
        jcenter()
        google()
        //maven { url 'https://kotlin.bintray.com/ktor' }
        //maven { url "https://kotlin.bintray.com/kotlinx" }
    }

    sourceSets {
        main.kotlin.srcDirs = main.java.srcDirs = ['src']
        test.kotlin.srcDirs = test.java.srcDirs = ['test']
        main.resources.srcDirs = ['resources']
        test.resources.srcDirs = ['testresources']
    }
    // Use KSP Generated sources
    sourceSets.main {
        java.srcDirs("build/generated/ksp/main/kotlin")
    }



    dependencies {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version")
        testImplementation("io.ktor:ktor-server-tests:$ktor_version")

        implementation("ch.qos.logback:logback-classic:$logback_version")

        implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinx_serialization_version") // JVM dependency
        implementation("io.ktor:ktor-serialization:$ktor_version")
        implementation("io.ktor:ktor-serialization-kotlinx-json:$ktor_version")

        // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
        implementation("org.apache.commons:commons-lang3:$commonsLang3Version")

        //commons-codec 1.13 会报 base64异常，1.10，1.15没有问题
        // https://mvnrepository.com/artifact/commons-codec/commons-codec
        implementation("commons-codec:commons-codec:$commonsCodecVersion")


        //implementation("com.github.rwsbillyang:ktorKit:1.1.0")
    }

//    configurations {
//        //移除spring boot 默认logger依赖
//        all*.exclude module: 'spring-boot-starter-logging'
//    }

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
            }
        }
    }
}











